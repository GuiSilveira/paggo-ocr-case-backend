services:
  #Development Services
  app-dev:
    container_name: paggo-ocr-app-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file:
      - .env.development
    ports:
      - '3000:3000'
      - '5555:5555'
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - dev
    command: ['/bin/sh', '-c', 'npx prisma migrate dev && npm run start:dev']
    restart: always

  #Production Services
  app-prod:
    container_name: paggo-ocr-app-prod
    build:
      context: .
      dockerfile: Dockerfile.prod
    env_file:
      - .env.production
    ports:
      - '8080:3000'
    depends_on:
      - db
    profiles:
      - prod
    restart: always
    command:
      ['/bin/sh', '-c', 'npx prisma migrate deploy && npm run start:prod']

  db:
    container_name: paggo-ocr-db
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=paggo
    ports:
      - '5432:5432'
    profiles:
      - dev
      - prod
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
